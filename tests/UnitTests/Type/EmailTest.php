<?php
declare(strict_types=1);
/**
 * Created by PhpStorm.
 * User: dedipyaman
 * Date: 8/31/18
 * Time: 1:26 AM
 */

namespace GreenTea\Phypes\Type;

use GreenTea\Phypes\Validator\EmailValidator;
use GreenTea\Phypes\Validator\Validator;
use PHPUnit\Framework\TestCase;
use Mockery;

final class EmailTest extends TestCase
{
    public function setUp()/* The :void return type declaration that should be here would cause a BC issue */
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testImplementsTypeInterface()
    {
        $this->assertInstanceOf(Type::class, $this->getValidEmail('email@example.com'));
    }

    public function testGetValue()
    {
        $email = $this->getValidEmail('email@example.com');
        $this->assertEquals('email@example.com', $email->getValue());
    }

    /**
     * @expectedException \InvalidArgumentException
     */
    public function testExceptionOnFailure()
    {
        $failingValue = "john@12.";

        $validator = Mockery::mock(Validator::class);
        $validator->allows()->isValid($failingValue)->andReturns(false);

        $email = new Email($failingValue, $validator);
        $this->expectException(\InvalidArgumentException::class);
    }

    private function getValidEmail(string $validEmail) : Email
    {
        $validator = Mockery::mock(Validator::class);
        $validator->allows()->isValid($validEmail)->andReturns(true);

        $email = new Email($validEmail, $validator);
        return $email;
    }
}
